{"version":3,"file":"static/js/510.86862ec9.chunk.js","mappings":"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","sources":["../node_modules/@socket.io/component-emitter/index.js","../node_modules/backo2/index.js","../node_modules/has-cors/index.js","../node_modules/parseqs/index.js","../node_modules/parseuri/index.js","../node_modules/yeast/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/@socket.io/base64-arraybuffer/src/index.ts","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\n\nexport const encode = (arraybuffer: ArrayBuffer): string => {\n    let bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = '';\n\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n\n    return base64;\n};\n\nexport const decode = (base64: string): ArrayBuffer => {\n    let bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    const arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"@socket.io/base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["Emitter","obj","key","prototype","mixin","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","Backoff","opts","ms","min","max","factor","jitter","attempts","module","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","XMLHttpRequest","err","encode","str","hasOwnProperty","encodeURIComponent","decode","qs","qry","pairs","split","l","pair","decodeURIComponent","re","parts","src","b","indexOf","e","substring","replace","m","exec","uri","source","host","authority","ipv6uri","pathNames","path","regx","names","substr","queryKey","query","data","$0","$1","$2","prev","alphabet","map","seed","num","encoded","yeast","now","Date","decoded","charAt","_arrayLikeToArray","arr","arr2","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","value","unsupportedIterableToArray","TypeError","_unsupportedIterableToArray","o","minLen","n","Object","toString","constructor","name","from","test","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","setPrototypeOf","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_typeof","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","result","Super","NewTarget","window","Function","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","_superPropBase","object","property","_get","get","receiver","base","desc","getOwnPropertyDescriptor","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","charCodeAt","decodeBase64Packet","binaryType","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","arraybuffer","bytes","mapBinary","encodedPacket","SEPARATOR","String","fromCharCode","Transport","readyState","socket","msg","Error","description","doOpen","doClose","onClose","packets","write","packet","decodePacket","onPacket","Polling","polling","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePacket","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","assign","Request","req","request","method","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","Socket","parseuri","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","c","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","allowArrayLike","it","F","s","f","normalCompletion","didErr","step","_e2","sent","emitBuffered","subDestroy","listener","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}