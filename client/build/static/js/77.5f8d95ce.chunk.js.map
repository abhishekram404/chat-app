{"version":3,"file":"static/js/77.5f8d95ce.chunk.js","mappings":"yKAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,G,uCIgB9F,EAnBwB,SAAC,GAMlB,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,KAKA,OACE,iBAAKC,UAAU,4DAAf,WACE,kBAAOA,UAAU,mDAAjB,gBACGD,QADH,IACGA,EAAAA,EAAQ,UAEX,gBAAKC,UAAU,8DAAf,gBACGF,QADH,IACGA,EAAAA,GAAW,eAAGE,UAAU,UAAb,iCAAqCD,QAArC,IAAqCA,EAAAA,EAAQ,gBCMjE,EAnBoB,SAAC,GAMd,IALLD,EAKI,EALJA,QACAC,EAII,EAJJA,KAKA,OACE,iBAAKC,UAAU,wDAAf,WACE,kBAAOA,UAAU,6CAAjB,gBACGD,QADH,IACGA,EAAAA,EAAQ,UAEX,gBAAKC,UAAU,yDAAf,gBACGF,QADH,IACGA,EAAAA,GAAW,eAAGE,UAAU,UAAb,iCAAqCD,QAArC,IAAqCA,EAAAA,EAAQ,gBC+CjE,EAzDqB,WACnB,OAAgCE,EAAAA,EAAAA,UAE9B,IAFF,eAAOC,EAAP,KAAiBC,EAAjB,KAyBA,OArBAC,EAAAA,EAAAA,YAAU,WAKR,OAJAC,EAAAA,EAAAA,GAAU,WAAW,SAACP,GACpBK,EAAY,GAAD,SAAKD,GAAL,CAAeJ,QAGrB,WACLO,EAAAA,EAAAA,IAAW,gBAIfD,EAAAA,EAAAA,YAAU,WAKR,OAJAC,EAAAA,EAAAA,GAAU,kBAAkB,SAACP,GAC3BK,EAAY,GAAD,SAAKD,GAAL,CAAeJ,QAGrB,WACLO,EAAAA,EAAAA,IAAW,sBAIfC,QAAQC,IAAIL,IAEV,iBAAMF,UAAU,4IAAhB,SACGE,EAASM,KACR,SAACV,GAAD,OAMEA,EAAQW,eACN,gBAAKT,UAAU,oCAAf,SACGF,EAAQY,OAETZ,EAAQa,MACV,SAAC,EAAD,CACEb,QAASA,EAAQY,KAEjBX,KAAMD,EAAQc,IADTd,EAAQY,OAIf,SAAC,EAAD,CACEZ,QAASA,EAAQY,KAEjBX,KAAMD,EAAQc,IADTd,EAAQY,a,gCCjD3B,KAAeG,EAAAA,EAAAA,IAAkB","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/ReceivedMessage.tsx","components/SentMessage.tsx","components/Conversation.tsx","utils/Socket.ts"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\n\nconst ReceivedMessage = ({\n  message,\n  name,\n}: {\n  message?: string;\n  name?: string;\n}) => {\n  return (\n    <div className=\"self-start flex flex-col justify-start mb-2 max-w-[400px]\">\n      <small className=\"text-[.7rem] text-slate-300 self-start ml-1 mb-1\">\n        {name ?? \"User\"}\n      </small>\n      <div className=\"bg-slate-500 rounded-2xl px-4 py-2 self-start flex flex-col\">\n        {message ?? <i className=\"text-sm\">Message from {name ?? \"User\"}</i>}\n      </div>\n    </div>\n  );\n};\n\nexport default ReceivedMessage;\n","import React from \"react\";\n\nconst SentMessage = ({\n  message,\n  name,\n}: {\n  message?: string;\n  name?: string | number;\n}) => {\n  return (\n    <div className=\"self-end flex flex-col justify-end mb-2 max-w-[400px]\">\n      <small className=\"text-2xs text-slate-300 self-end mr-1 mb-1\">\n        {name ?? \"User\"}\n      </small>\n      <div className=\"bg-purple rounded-2xl px-4 py-2 self-end flex flex-col\">\n        {message ?? <i className=\"text-sm\">Message from {name ?? \"User\"}</i>}\n      </div>\n    </div>\n  );\n};\n\nexport default SentMessage;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport socket from \"../utils/Socket\";\nimport ReceivedMessage from \"./ReceivedMessage\";\nimport SentMessage from \"./SentMessage\";\n\nconst Conversation = () => {\n  const [messages, setMessages] = useState<\n    { text: string; id: string; self: boolean; serverMessage: boolean }[]\n  >([]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([...messages, message]);\n    });\n\n    return () => {\n      socket.off(\"message\");\n    };\n  });\n\n  useEffect(() => {\n    socket.on(\"server_message\", (message) => {\n      setMessages([...messages, message]);\n    });\n\n    return () => {\n      socket.off(\"server_message\");\n    };\n  });\n\n  console.log(messages);\n  return (\n    <main className=\"max-h-[800px] h-[500px] min-h-[500px] bg-slate-700 overflow-y-scroll overflow-x-hidden p-3 flex flex-col flex-1 scrollbar-hide rounded-lg\">\n      {messages.map(\n        (message: {\n          text: string;\n          id: string;\n          self: boolean;\n          serverMessage: boolean;\n        }) =>\n          message.serverMessage ? (\n            <div className=\"text-center text-sm text-white/50\">\n              {message.text}\n            </div>\n          ) : message.self ? (\n            <SentMessage\n              message={message.text}\n              key={message.text}\n              name={message.id}\n            />\n          ) : (\n            <ReceivedMessage\n              message={message.text}\n              key={message.text}\n              name={message.id}\n            />\n          )\n      )}\n    </main>\n  );\n};\n\nexport default Conversation;\n\n//  {\n//    self ? (\n//      <SentMessage message={message.text} key={message.id} name={message.id} />\n//    ) : (\n//      <ReceivedMessage\n//        message={message.text}\n//        key={message.id}\n//        name={message.id}\n//      />\n//    );\n//  }\n","import React from \"react\";\nimport { io } from \"socket.io-client\";\n\nconst isProduction = process.env.REACT_APP_NODE_ENV === \"production\";\nexport default io(isProduction ? \"\" : \"http://localhost:4000\");\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","message","name","className","useState","messages","setMessages","useEffect","socket","console","log","map","serverMessage","text","self","id","io"],"sourceRoot":""}