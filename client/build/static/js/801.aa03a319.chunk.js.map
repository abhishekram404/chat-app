{"version":3,"file":"static/js/801.aa03a319.chunk.js","mappings":"4JAyCA,UArCsB,WACpB,IAAQA,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACR,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OACE,kBACEC,UAAU,iDACVC,SAfiB,SAACC,GACpBA,EAAEC,iBACGL,IAGLM,EAAAA,EAAAA,KAAY,UAAW,CACrBC,KAAMP,EACNQ,GAAIF,EAAAA,EAAAA,GACJV,SAAUA,IAEZK,EAAW,MAGX,WAIE,kBACEQ,KAAK,OACLP,UAAU,8CACVQ,YAAY,6BACZC,SAxBe,SAACP,GAAD,OACnBH,EAAWG,EAAEQ,OAAOC,QAwBhBA,MAAOb,KAET,mBAAQE,UAAU,6BAA6BO,KAAK,SAApD","sources":["components/CreateMessage.tsx"],"sourcesContent":["import React, { KeyboardEvent, useContext, useState } from \"react\";\nimport socket from \"../utils/Socket\";\nimport UserContext from \"../utils/UserContext\";\n\nconst CreateMessage = () => {\n  const { username } = useContext(UserContext);\n  const [newText, setNewText] = useState(\"\");\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setNewText(e.target.value);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!newText) {\n      return;\n    }\n    socket.emit(\"message\", {\n      text: newText,\n      id: socket.id,\n      username: username,\n    });\n    setNewText(\"\");\n  };\n  return (\n    <form\n      className=\"flex align-center mt-2 overflow-hidden rounded\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"flex-1  px-4 py-2 bg-slate-600 outline-none\"\n        placeholder=\"Enter your message here...\"\n        onChange={handleChange}\n        value={newText}\n      />\n      <button className=\"bg-purple outline-none p-2\" type=\"submit\">\n        Send\n      </button>\n    </form>\n  );\n};\n\nexport default CreateMessage;\n"],"names":["username","useContext","UserContext","useState","newText","setNewText","className","onSubmit","e","preventDefault","socket","text","id","type","placeholder","onChange","target","value"],"sourceRoot":""}